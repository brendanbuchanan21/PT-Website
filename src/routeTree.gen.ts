/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AdminLoginImport } from './routes/admin-login'
import { Route as IndexImport } from './routes/index'
import { Route as BlogIndexImport } from './routes/blog/index'
import { Route as AdminDashboardIndexImport } from './routes/admin-dashboard/index'
import { Route as BlogIdImport } from './routes/blog/$id'
import { Route as AdminDashboardNewImport } from './routes/admin-dashboard/new'
import { Route as AdminDashboardPostIdImport } from './routes/admin-dashboard/$postId'

// Create/Update Routes

const AdminLoginRoute = AdminLoginImport.update({
  id: '/admin-login',
  path: '/admin-login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const BlogIndexRoute = BlogIndexImport.update({
  id: '/blog/',
  path: '/blog/',
  getParentRoute: () => rootRoute,
} as any)

const AdminDashboardIndexRoute = AdminDashboardIndexImport.update({
  id: '/admin-dashboard/',
  path: '/admin-dashboard/',
  getParentRoute: () => rootRoute,
} as any)

const BlogIdRoute = BlogIdImport.update({
  id: '/blog/$id',
  path: '/blog/$id',
  getParentRoute: () => rootRoute,
} as any)

const AdminDashboardNewRoute = AdminDashboardNewImport.update({
  id: '/admin-dashboard/new',
  path: '/admin-dashboard/new',
  getParentRoute: () => rootRoute,
} as any)

const AdminDashboardPostIdRoute = AdminDashboardPostIdImport.update({
  id: '/admin-dashboard/$postId',
  path: '/admin-dashboard/$postId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin-login': {
      id: '/admin-login'
      path: '/admin-login'
      fullPath: '/admin-login'
      preLoaderRoute: typeof AdminLoginImport
      parentRoute: typeof rootRoute
    }
    '/admin-dashboard/$postId': {
      id: '/admin-dashboard/$postId'
      path: '/admin-dashboard/$postId'
      fullPath: '/admin-dashboard/$postId'
      preLoaderRoute: typeof AdminDashboardPostIdImport
      parentRoute: typeof rootRoute
    }
    '/admin-dashboard/new': {
      id: '/admin-dashboard/new'
      path: '/admin-dashboard/new'
      fullPath: '/admin-dashboard/new'
      preLoaderRoute: typeof AdminDashboardNewImport
      parentRoute: typeof rootRoute
    }
    '/blog/$id': {
      id: '/blog/$id'
      path: '/blog/$id'
      fullPath: '/blog/$id'
      preLoaderRoute: typeof BlogIdImport
      parentRoute: typeof rootRoute
    }
    '/admin-dashboard/': {
      id: '/admin-dashboard/'
      path: '/admin-dashboard'
      fullPath: '/admin-dashboard'
      preLoaderRoute: typeof AdminDashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/blog/': {
      id: '/blog/'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin-login': typeof AdminLoginRoute
  '/admin-dashboard/$postId': typeof AdminDashboardPostIdRoute
  '/admin-dashboard/new': typeof AdminDashboardNewRoute
  '/blog/$id': typeof BlogIdRoute
  '/admin-dashboard': typeof AdminDashboardIndexRoute
  '/blog': typeof BlogIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin-login': typeof AdminLoginRoute
  '/admin-dashboard/$postId': typeof AdminDashboardPostIdRoute
  '/admin-dashboard/new': typeof AdminDashboardNewRoute
  '/blog/$id': typeof BlogIdRoute
  '/admin-dashboard': typeof AdminDashboardIndexRoute
  '/blog': typeof BlogIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin-login': typeof AdminLoginRoute
  '/admin-dashboard/$postId': typeof AdminDashboardPostIdRoute
  '/admin-dashboard/new': typeof AdminDashboardNewRoute
  '/blog/$id': typeof BlogIdRoute
  '/admin-dashboard/': typeof AdminDashboardIndexRoute
  '/blog/': typeof BlogIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin-login'
    | '/admin-dashboard/$postId'
    | '/admin-dashboard/new'
    | '/blog/$id'
    | '/admin-dashboard'
    | '/blog'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin-login'
    | '/admin-dashboard/$postId'
    | '/admin-dashboard/new'
    | '/blog/$id'
    | '/admin-dashboard'
    | '/blog'
  id:
    | '__root__'
    | '/'
    | '/admin-login'
    | '/admin-dashboard/$postId'
    | '/admin-dashboard/new'
    | '/blog/$id'
    | '/admin-dashboard/'
    | '/blog/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminLoginRoute: typeof AdminLoginRoute
  AdminDashboardPostIdRoute: typeof AdminDashboardPostIdRoute
  AdminDashboardNewRoute: typeof AdminDashboardNewRoute
  BlogIdRoute: typeof BlogIdRoute
  AdminDashboardIndexRoute: typeof AdminDashboardIndexRoute
  BlogIndexRoute: typeof BlogIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminLoginRoute: AdminLoginRoute,
  AdminDashboardPostIdRoute: AdminDashboardPostIdRoute,
  AdminDashboardNewRoute: AdminDashboardNewRoute,
  BlogIdRoute: BlogIdRoute,
  AdminDashboardIndexRoute: AdminDashboardIndexRoute,
  BlogIndexRoute: BlogIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin-login",
        "/admin-dashboard/$postId",
        "/admin-dashboard/new",
        "/blog/$id",
        "/admin-dashboard/",
        "/blog/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/admin-login": {
      "filePath": "admin-login.tsx"
    },
    "/admin-dashboard/$postId": {
      "filePath": "admin-dashboard/$postId.tsx"
    },
    "/admin-dashboard/new": {
      "filePath": "admin-dashboard/new.tsx"
    },
    "/blog/$id": {
      "filePath": "blog/$id.tsx"
    },
    "/admin-dashboard/": {
      "filePath": "admin-dashboard/index.tsx"
    },
    "/blog/": {
      "filePath": "blog/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
