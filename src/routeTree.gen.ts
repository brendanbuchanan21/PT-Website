/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as BlogPostPageImport } from './routes/blog-post-page'
import { Route as BlogImport } from './routes/blog'
import { Route as AdminLoginImport } from './routes/admin-login'
import { Route as AdminDashboardImport } from './routes/admin-dashboard'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const BlogPostPageRoute = BlogPostPageImport.update({
  id: '/blog-post-page',
  path: '/blog-post-page',
  getParentRoute: () => rootRoute,
} as any)

const BlogRoute = BlogImport.update({
  id: '/blog',
  path: '/blog',
  getParentRoute: () => rootRoute,
} as any)

const AdminLoginRoute = AdminLoginImport.update({
  id: '/admin-login',
  path: '/admin-login',
  getParentRoute: () => rootRoute,
} as any)

const AdminDashboardRoute = AdminDashboardImport.update({
  id: '/admin-dashboard',
  path: '/admin-dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin-dashboard': {
      id: '/admin-dashboard'
      path: '/admin-dashboard'
      fullPath: '/admin-dashboard'
      preLoaderRoute: typeof AdminDashboardImport
      parentRoute: typeof rootRoute
    }
    '/admin-login': {
      id: '/admin-login'
      path: '/admin-login'
      fullPath: '/admin-login'
      preLoaderRoute: typeof AdminLoginImport
      parentRoute: typeof rootRoute
    }
    '/blog': {
      id: '/blog'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogImport
      parentRoute: typeof rootRoute
    }
    '/blog-post-page': {
      id: '/blog-post-page'
      path: '/blog-post-page'
      fullPath: '/blog-post-page'
      preLoaderRoute: typeof BlogPostPageImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin-dashboard': typeof AdminDashboardRoute
  '/admin-login': typeof AdminLoginRoute
  '/blog': typeof BlogRoute
  '/blog-post-page': typeof BlogPostPageRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin-dashboard': typeof AdminDashboardRoute
  '/admin-login': typeof AdminLoginRoute
  '/blog': typeof BlogRoute
  '/blog-post-page': typeof BlogPostPageRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin-dashboard': typeof AdminDashboardRoute
  '/admin-login': typeof AdminLoginRoute
  '/blog': typeof BlogRoute
  '/blog-post-page': typeof BlogPostPageRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin-dashboard'
    | '/admin-login'
    | '/blog'
    | '/blog-post-page'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/admin-dashboard' | '/admin-login' | '/blog' | '/blog-post-page'
  id:
    | '__root__'
    | '/'
    | '/admin-dashboard'
    | '/admin-login'
    | '/blog'
    | '/blog-post-page'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminDashboardRoute: typeof AdminDashboardRoute
  AdminLoginRoute: typeof AdminLoginRoute
  BlogRoute: typeof BlogRoute
  BlogPostPageRoute: typeof BlogPostPageRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminDashboardRoute: AdminDashboardRoute,
  AdminLoginRoute: AdminLoginRoute,
  BlogRoute: BlogRoute,
  BlogPostPageRoute: BlogPostPageRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin-dashboard",
        "/admin-login",
        "/blog",
        "/blog-post-page"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/admin-dashboard": {
      "filePath": "admin-dashboard.tsx"
    },
    "/admin-login": {
      "filePath": "admin-login.tsx"
    },
    "/blog": {
      "filePath": "blog.tsx"
    },
    "/blog-post-page": {
      "filePath": "blog-post-page.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
